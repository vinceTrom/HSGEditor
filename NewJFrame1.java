/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import javaapplication1.AnimsValues.Picture;
import javaapplication1.parser.PlayerXMLFile;
import javaapplication1.parser.PlayerXMLFile.AnimationElement;
import javax.swing.JScrollPane;

/**
 *
 * @author Vince
 */
public class NewJFrame1 extends javax.swing.JFrame {

    private boolean ready = false;
    BigPic pic;
    AnimsValues animValues;

    /**
     * Creates new form NewJFrame1
     */
    public NewJFrame1() {
        initComponents();
        animValues = new AnimsValues();
        ANim anim = new ANim(animValues);
        anim.inith();
        anim.setSize(330, 330);
        animPanel.add(anim);

        pic = new BigPic();
        pic.inith();
        pic.setSize(900, 300);
        bigpicpanel.add(pic);
        System.out.println("width: "+pic.img.getWidth());
        pic.setSize(pic.img.getWidth()*2, pic.img.getHeight());
        bigpicpanel.setSize(pic.img.getWidth()*2, pic.img.getHeight());
        ready = true;

        PlayerXMLFile xmlfile = new PlayerXMLFile("C:/Users/Vince/Documents/AnimEditor/player.xml");
        initAnimValues(xmlfile);
        picNbSpinner.setValue(animValues.anims.get("walk").size());
        currentPicSpinner.setValue(0);
        fillSPinnerFromPicNumber(0);
    }

    private void fillSPinnerFromPicNumber(int index) {
        Picture p = animValues.getAnim((String) animName.getItemAt(animName.getSelectedIndex())).get(index);
        posXSpinner.setValue(p.posX);
        posYSpinner.setValue(p.posY);
        widthSpinner.setValue(p.width);
        heightSpinner.setValue(p.height);
        anchorXSpinner.setValue(p.anchorX);
        anchorYSpinner.setValue(p.anchorY);
    }

    private void initAnimValues(PlayerXMLFile xmlfile) {
        for (String s : xmlfile.anims.keySet()) {
            animValues.addAnim(s);
            AnimsValues.Anim anima = animValues.getAnim(s);
            for (int j = 0; j < xmlfile.anims.get(s).getFrameNumber(); j++) {
                AnimationElement a = xmlfile.anims.get(s);
                int posX = a.getOrig(j).x;
                int posY = a.getOrig(j).y;
                int width = a.getWidth(j);
                int height = a.getHeight(j);
                int anchorX = a.getAnchor(j).x;
                int anchorY = a.getAnchor(j).y;
                anima.addPicture(j, posX, posY, width, height, anchorX, anchorY);
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        animName = new javax.swing.JComboBox();
        picNbSpinner = new javax.swing.JSpinner();
        currentPicSpinner = new javax.swing.JSpinner();
        posXSpinner = new javax.swing.JSpinner();
        posYSpinner = new javax.swing.JSpinner();
        widthSpinner = new javax.swing.JSpinner();
        heightSpinner = new javax.swing.JSpinner();
        anchorXSpinner = new javax.swing.JSpinner();
        anchorYSpinner = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        animPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updateAnimsValue = new javax.swing.JButton();
        jScrollPane1 =  new JScrollPane(bigpicpanel);
        bigpicpanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        animName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "walk", "jump", "fall" }));

        picNbSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                changed(evt);
            }
        });
        picNbSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                picNbChanged(evt);
            }
        });

        currentPicSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                currentPicChanged(evt);
            }
        });

        posXSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                posXChanged(evt);
            }
        });

        posYSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                posYChanged(evt);
            }
        });

        widthSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                widthChanged(evt);
            }
        });

        heightSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                heightChanged(evt);
            }
        });

        anchorXSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                anchorXChanged(evt);
            }
        });

        anchorYSpinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                anchorYChanged(evt);
            }
        });

        jButton1.setText("refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout animPanelLayout = new javax.swing.GroupLayout(animPanel);
        animPanel.setLayout(animPanelLayout);
        animPanelLayout.setHorizontalGroup(
            animPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );
        animPanelLayout.setVerticalGroup(
            animPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 263, Short.MAX_VALUE)
        );

        jLabel1.setText("Anchor");

        jLabel2.setText("Anim");

        jLabel3.setText("image");

        jLabel4.setText("X:");

        jLabel5.setText("Y:");

        jLabel6.setText("width:");

        jLabel7.setText("height:");

        jLabel8.setText("X:");

        jLabel9.setText("Y:");

        jLabel10.setText("picnb");

        jLabel11.setText("current pic");

        updateAnimsValue.setText("updateAnimValues");
        updateAnimsValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAnimsValueActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(3767, 32767));

        bigpicpanel.setAutoscrolls(true);

        javax.swing.GroupLayout bigpicpanelLayout = new javax.swing.GroupLayout(bigpicpanel);
        bigpicpanel.setLayout(bigpicpanelLayout);
        bigpicpanelLayout.setHorizontalGroup(
            bigpicpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1058, Short.MAX_VALUE)
        );
        bigpicpanelLayout.setVerticalGroup(
            bigpicpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 284, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(bigpicpanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(animName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(posXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(currentPicSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(picNbSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(45, 45, 45)
                                                .addComponent(jLabel4))
                                            .addComponent(jLabel11))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(widthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(posYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(heightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(165, 165, 165)
                        .addComponent(jLabel8)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(anchorYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(anchorXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(updateAnimsValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                        .addComponent(animPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1077, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(animName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(posXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(posYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(8, 8, 8)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(picNbSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(widthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentPicSpinner)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateAnimsValue)
                            .addComponent(anchorXSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(anchorYSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(animPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)))
                .addGap(627, 627, 627))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void picNbChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_picNbChanged
        refreshPicData();
    }//GEN-LAST:event_picNbChanged

    private void currentPicChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_currentPicChanged
        refreshPicData();
    }//GEN-LAST:event_currentPicChanged

    private void posXChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_posXChanged
        refreshPicData();
    }//GEN-LAST:event_posXChanged

    private void posYChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_posYChanged
        refreshPicData();
    }//GEN-LAST:event_posYChanged

    private void widthChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_widthChanged
        refreshPicData();
    }//GEN-LAST:event_widthChanged

    private void heightChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_heightChanged
        refreshPicData();
    }//GEN-LAST:event_heightChanged

    private void anchorXChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_anchorXChanged
        refreshPicData();
    }//GEN-LAST:event_anchorXChanged

    private void anchorYChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_anchorYChanged
        refreshPicData();
    }//GEN-LAST:event_anchorYChanged

    private void changed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_changed
        refreshPicData();
    }//GEN-LAST:event_changed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        refreshPicData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void updateAnimsValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAnimsValueActionPerformed
        int currentFrame = (Integer) currentPicSpinner.getValue();

        Picture p = animValues.getAnim((String) animName.getItemAt(animName.getSelectedIndex())).get((Integer) currentFrame);

        p.width = (Integer) widthSpinner.getValue();
        p.height = (Integer) heightSpinner.getValue();
        p.posX = (Integer) posXSpinner.getValue();
        p.posY = (Integer) posYSpinner.getValue();
    }//GEN-LAST:event_updateAnimsValueActionPerformed
    private void refreshPicData() {
        System.out.println("update");
        if (ready) {
            int currentFrame = (Integer) currentPicSpinner.getValue();
            Picture p = animValues.getAnim((String) animName.getItemAt(animName.getSelectedIndex())).get((Integer) currentFrame);
            widthSpinner.setValue(p.width);
            heightSpinner.setValue(p.height);
            posXSpinner.setValue(p.posX);
            posYSpinner.setValue(p.posY);
            pic.width = p.width;
            pic.height = p.height;
            pic.posX = p.posX;
            pic.posY = p.posY;
            pic.repaint();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner anchorXSpinner;
    private javax.swing.JSpinner anchorYSpinner;
    private javax.swing.JComboBox animName;
    private javax.swing.JPanel animPanel;
    private javax.swing.JPanel bigpicpanel;
    private javax.swing.JSpinner currentPicSpinner;
    private javax.swing.JSpinner heightSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner picNbSpinner;
    private javax.swing.JSpinner posXSpinner;
    private javax.swing.JSpinner posYSpinner;
    private javax.swing.JButton updateAnimsValue;
    private javax.swing.JSpinner widthSpinner;
    // End of variables declaration//GEN-END:variables
}
